{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAGtC,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAZfL,EAAOY,iBAAiB,UAiBxB,SAA8BC,GAC5BA,EAAMC,iBAEN,IAAIC,EAAkBC,OAAOhB,EAAOK,MAAMY,OACtCC,EAAiBF,OAAOhB,EAAOmB,KAAKF,OACpCG,EAAmBJ,OAAOhB,EAAOqB,OAAOJ,OAE1C,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAkBE,GAAK,EAE1CnB,EAAemB,EAAGP,GAAiBQ,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACnDP,EAAA0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAG9DU,GAAmBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', submitCreatePromises);\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n      setTimeout(()=>{\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n      }, delay)\n    })\n  }\n\n\nfunction submitCreatePromises(event) {\n  event.preventDefault();\n\n  let delayInputValue = Number(formEl.delay.value);\n  let stepInputValue = Number(formEl.step.value);\n  let amountInputValue = Number(formEl.amount.value);\n\n    for (let i = 1; i <= amountInputValue; i += 1) {\n\n      createPromise( i, delayInputValue).then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n      delayInputValue += stepInputValue;\n    }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayInputValue","Number","value","stepInputValue","step","amountInputValue","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1b6c7d42.js.map"}