{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAGtC,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAZTL,EAAOY,iBAAiB,UAiBxB,SAA8BC,GAC5BA,EAAMC,iBAMJ,IAJF,IAAIC,EAAkBC,OAAOhB,EAAOK,MAAMY,OACtCC,EAAiBF,OAAOhB,EAAOmB,KAAKF,OACpCG,EAAmBJ,OAAOhB,EAAOqB,OAAOJ,OAEjCK,EAAI,EAAGA,GAAKF,EAAkBE,GAAK,EAE1CnB,EAAemB,EAAGP,GAAiBQ,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACnDP,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBP,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG5DU,GAAmBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', submitCreatePromises);\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n      setTimeout(()=>{\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n      }, delay)\n    })\n  }\n\n\nfunction submitCreatePromises(event) {\n  event.preventDefault();\n\n  let delayInputValue = Number(formEl.delay.value);\n  let stepInputValue = Number(formEl.step.value);\n  let amountInputValue = Number(formEl.amount.value);\n\n    for (let i = 1; i <= amountInputValue; i += 1) {\n\n      createPromise( i, delayInputValue).then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n      delayInputValue += stepInputValue;\n    }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayInputValue","Number","value","stepInputValue","step","amountInputValue","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.828ca997.js.map"}